{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhaka\\\\Downloads\\\\QuickSell-Frontend-Assignment\\\\Frontend_Assignment_Campus\\\\src\\\\Page\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../Components/Card\";\nimport Navbar from \"../Components/Navbar\";\nimport CustomSpinner from \"../Components/CustomSpinner\";\n\n// Import Images\n\nimport img0 from \"../Assets/img0.png\";\nimport img1 from \"../Assets/img1.png\";\nimport img4 from \"../Assets/img4.jpeg\";\nimport img5 from \"../Assets/img5.jpeg\";\nimport img6 from \"../Assets/img6.png\";\nimport img7 from \"../Assets/img7.png\";\nimport { FETCH_URL } from \"../Config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // State Variables\n  const [userData, setUserData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [status, setStatus] = useState({});\n  const [user, setUser] = useState({});\n  const [priority, setPriority] = useState({});\n  const [grouping, setGrouping] = useState('status');\n  const [ordering, setOrdering] = useState('priority');\n  const [availableUser, setAvailableUser] = useState({});\n  const [statusMapping, setStatusMapping] = useState({});\n  const statusKeys = [\"Backlog\", \"Todo\", \"In progress\", \"Done\", \"Canceled\"];\n\n  // Fetch Data \n  useEffect(() => {\n    getData();\n  }, [grouping, ordering]);\n  const sortByTitle = tickets => {\n    return tickets.sort((a, b) => a.title.localeCompare(b.title));\n  };\n\n  // Grouping the data by Status\n  const groupByStatus = tickets => {\n    let sortedTickets = tickets;\n    if (ordering === \"title\") {\n      sortedTickets = sortByTitle(tickets);\n    }\n    const grouped = sortedTickets.reduce((acc, ticket) => {\n      if (!acc[ticket.status]) {\n        acc[ticket.status] = [];\n      }\n      acc[ticket.status].push(ticket);\n      return acc;\n    }, {});\n    statusKeys.forEach(key => {\n      if (!grouped[key]) {\n        grouped[key] = [];\n      }\n    });\n    if (ordering === \"priority\") {\n      for (let key in grouped) {\n        grouped[key].sort((a, b) => b.priority - a.priority);\n      }\n    }\n    return {\n      Keys: statusKeys,\n      ...grouped\n    };\n  };\n\n  // Grouping the data by Priority\n  const groupByPriority = tickets => {\n    let sortedTickets = tickets;\n    if (ordering === \"title\") {\n      sortedTickets = sortByTitle(tickets);\n    }\n    const priorityObject = sortedTickets.reduce((acc, ticket) => {\n      if (!acc[ticket.priority]) {\n        acc[ticket.priority] = [];\n      }\n      acc[ticket.priority].push(ticket);\n      return acc;\n    }, {});\n    return {\n      Keys: Object.keys(priorityObject),\n      ...priorityObject\n    };\n  };\n\n  // Grouping the data by users\n  const groupByUser = tickets => {\n    let sortedTickets = tickets;\n    if (ordering === \"title\") {\n      sortedTickets = sortByTitle(tickets);\n    }\n    const grouped = sortedTickets.reduce((acc, ticket) => {\n      if (!acc[ticket.userId]) {\n        acc[ticket.userId] = [];\n      }\n      acc[ticket.userId].push(ticket);\n      return acc;\n    }, {});\n    if (ordering === \"priority\") {\n      for (let key in grouped) {\n        grouped[key].sort((a, b) => b.priority - a.priority);\n      }\n    }\n    return {\n      Keys: userData.map(user => user.id.toString()),\n      ...grouped\n    };\n  };\n\n  // Available User (online/offline) \n  const availabilityMap = users => {\n    return users.reduce((acc, user) => {\n      acc[user.id] = user.available;\n      return acc;\n    }, {});\n  };\n\n  // Work Status\n  const extractStatusMapping = data => {\n    const statusMapping = {};\n    data.tickets.forEach(ticket => {\n      statusMapping[ticket.id] = ticket.status;\n    });\n    return statusMapping;\n  };\n\n  // Fetch API function\n  const getData = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(FETCH_URL);\n      const data = await response.json();\n      setIsLoading(false);\n      setUserData(data.users);\n      setUser(groupByUser(data.tickets));\n      setStatus(groupByStatus(data.tickets));\n      setPriority(groupByPriority(data.tickets));\n      setAvailableUser(availabilityMap(data.users));\n      setStatusMapping(extractStatusMapping(data));\n    } catch (e) {\n      console.log(e);\n      setIsLoading(false);\n    }\n  };\n  if (grouping === \"status\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          grouping: grouping,\n          setGrouping: setGrouping,\n          ordering: ordering,\n          setOrdering: setOrdering,\n          call: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Dashboard-Container\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: status.Keys.map((item, index) => {\n              var _status$item;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-text\",\n                    children: [item == \"Todo\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-circle\",\n                      id: \"todo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 27\n                    }, this) : item == \"In progress\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-adjust\",\n                      id: \"progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 27\n                    }, this) : item == \"Backlog\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-task-x\",\n                      id: \"backlog\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 27\n                    }, this) : item == \"Done\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bxs-check-circle\",\n                      id: \"done\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bxs-x-circle\",\n                      id: \"cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text\",\n                      children: item == \"In progress\" ? \"In Progress\" : item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: (_status$item = status[item]) === null || _status$item === void 0 ? void 0 : _status$item.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-plus\",\n                      id: \"plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-dots-horizontal-rounded\",\n                      id: \"dots\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this), status[item] && status[item].map(value => {\n                  return /*#__PURE__*/_jsxDEV(Card, {\n                    id: value.id,\n                    title: value.title,\n                    tag: value.tag,\n                    userId: value.userId,\n                    status: status,\n                    userData: userData,\n                    priority: value.priority,\n                    grouping: grouping,\n                    ordering: ordering,\n                    statusMapping: statusMapping\n                  }, value.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (grouping == \"users\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          grouping: grouping,\n          setGrouping: setGrouping,\n          ordering: ordering,\n          setOrdering: setOrdering,\n          call: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Dashboard-Container\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: availableUser && user.Keys.map((userId, index) => {\n              var _userData$find, _user$userId;\n              const currentUserName = ((_userData$find = userData.find(u => u.id.toString() === userId)) === null || _userData$find === void 0 ? void 0 : _userData$find.name) || \"Unknown\";\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-text\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: String(availableUser[userId]) == \"false\" ? \"user-avatar-unavailable\" : \"user-avatar\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: userId == \"usr-1\" ? img1 : userId == \"usr-2\" ? img6 : userId == \"usr-3\" ? img7 : userId == \"usr-4\" ? img5 : userId == \"usr-5\" ? img4 : img0,\n                        className: String(availableUser[userId]) == \"false\" ? \"user-avatar-unavailable\" : \"user-avatar\",\n                        alt: \"user\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text\",\n                      children: currentUserName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: (_user$userId = user[userId]) === null || _user$userId === void 0 ? void 0 : _user$userId.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-plus\",\n                      id: \"plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-dots-horizontal-rounded\",\n                      id: \"dots\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 25\n                }, this), user[userId] && user[userId].map(ticket => {\n                  return /*#__PURE__*/_jsxDEV(Card, {\n                    id: ticket.id,\n                    title: ticket.title,\n                    tag: ticket.tag,\n                    userId: ticket.userId,\n                    userData: userData,\n                    priority: ticket.priority,\n                    grouping: grouping,\n                    ordering: ordering,\n                    status: status,\n                    statusMapping: statusMapping\n                  }, ticket.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 31\n                  }, this);\n                })]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          grouping: grouping,\n          setGrouping: setGrouping,\n          ordering: ordering,\n          setOrdering: setOrdering,\n          call: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Dashboard-Container\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: priority.Keys.sort((a, b) => a - b).map((item, index) => {\n              var _priority$item;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-text-priority\",\n                    children: [item == \"0\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-dots-horizontal-rounded\",\n                      id: \"noPriority\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 27\n                    }, this) : item == \"1\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-signal-1\",\n                      id: \"low\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 27\n                    }, this) : item == \"2\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-signal-2\",\n                      id: \"medium\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 27\n                    }, this) : item == \"3\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-signal-3\",\n                      id: \"high\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bxs-message-square-error\",\n                      id: \"urgent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text\",\n                      children: `Priority ${item}` == \"Priority 4\" ? \"Urgent\" : `Priority ${item}` == \"Priority 3\" ? \"High\" : `Priority ${item}` == \"Priority 2\" ? \"Medium\" : `Priority ${item}` == \"Priority 1\" ? \"Low\" : \"No Priority\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"count\",\n                      children: (_priority$item = priority[item]) === null || _priority$item === void 0 ? void 0 : _priority$item.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-plus\",\n                      id: \"plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bx bx-dots-horizontal-rounded\",\n                      id: \"dots\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this), priority[item] && priority[item].map(value => {\n                  return /*#__PURE__*/_jsxDEV(Card, {\n                    id: value.id,\n                    title: value.title,\n                    tag: value.tag,\n                    userId: value.userId,\n                    status: status,\n                    userData: userData,\n                    priority: value.priority,\n                    grouping: grouping,\n                    ordering: ordering,\n                    statusMapping: statusMapping\n                  }, value.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n};\n_s(Dashboard, \"mLmNSN2MRx0Rt8D6+OjOCJjdM50=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Card","Navbar","CustomSpinner","img0","img1","img4","img5","img6","img7","FETCH_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","userData","setUserData","isLoading","setIsLoading","status","setStatus","user","setUser","priority","setPriority","grouping","setGrouping","ordering","setOrdering","availableUser","setAvailableUser","statusMapping","setStatusMapping","statusKeys","getData","sortByTitle","tickets","sort","a","b","title","localeCompare","groupByStatus","sortedTickets","grouped","reduce","acc","ticket","push","forEach","key","Keys","groupByPriority","priorityObject","Object","keys","groupByUser","userId","map","id","toString","availabilityMap","users","available","extractStatusMapping","data","response","fetch","json","e","console","log","children","call","fileName","_jsxFileName","lineNumber","columnNumber","className","item","index","_status$item","length","value","tag","_userData$find","_user$userId","currentUserName","find","u","name","String","src","alt","_priority$item","_c","$RefreshReg$"],"sources":["C:/Users/dhaka/Downloads/QuickSell-Frontend-Assignment/Frontend_Assignment_Campus/src/Page/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../Components/Card\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport CustomSpinner from \"../Components/CustomSpinner\";\r\n\r\n// Import Images\r\n\r\nimport img0 from \"../Assets/img0.png\";\r\nimport img1 from \"../Assets/img1.png\";\r\nimport img4 from \"../Assets/img4.jpeg\";\r\nimport img5 from \"../Assets/img5.jpeg\";\r\nimport img6 from \"../Assets/img6.png\";\r\nimport img7 from \"../Assets/img7.png\";\r\nimport { FETCH_URL } from \"../Config\";\r\n\r\nconst Dashboard = () => {\r\n  // State Variables\r\n  const [userData, setUserData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [status, setStatus] = useState({});\r\n  const [user, setUser] = useState({});\r\n  const [priority, setPriority] = useState({});\r\n  const [grouping, setGrouping] = useState('status');\r\n  const [ordering, setOrdering] = useState('priority');\r\n  const [availableUser, setAvailableUser] = useState({});\r\n  const [statusMapping, setStatusMapping] = useState({});\r\n  const statusKeys = [\"Backlog\", \"Todo\", \"In progress\", \"Done\", \"Canceled\"];\r\n  \r\n\r\n  // Fetch Data \r\n  useEffect(() => {\r\n    getData();\r\n  }, [grouping, ordering]);\r\n\r\n  const sortByTitle = (tickets) => {\r\n    return tickets.sort((a, b) => a.title.localeCompare(b.title));\r\n  };\r\n\r\n  // Grouping the data by Status\r\n  const groupByStatus = (tickets) => {\r\n    let sortedTickets = tickets;\r\n\r\n    if (ordering === \"title\") {\r\n      sortedTickets = sortByTitle(tickets);\r\n    }\r\n\r\n    const grouped = sortedTickets.reduce((acc, ticket) => {\r\n      if (!acc[ticket.status]) {\r\n        acc[ticket.status] = [];\r\n      }\r\n      acc[ticket.status].push(ticket);\r\n      return acc;\r\n    }, {});\r\n\r\n    statusKeys.forEach((key) => {\r\n      if (!grouped[key]) {\r\n        grouped[key] = [];\r\n      }\r\n    });\r\n\r\n    if (ordering === \"priority\") {\r\n      for (let key in grouped) {\r\n        grouped[key].sort((a, b) => b.priority - a.priority);\r\n      }\r\n    }\r\n\r\n    return {\r\n      Keys: statusKeys,\r\n      ...grouped,\r\n    };\r\n  };\r\n\r\n  // Grouping the data by Priority\r\n  const groupByPriority = (tickets) => {\r\n    let sortedTickets = tickets;\r\n\r\n    if (ordering === \"title\") {\r\n      sortedTickets = sortByTitle(tickets);\r\n    }\r\n\r\n    const priorityObject = sortedTickets.reduce((acc, ticket) => {\r\n      if (!acc[ticket.priority]) {\r\n        acc[ticket.priority] = [];\r\n      }\r\n      acc[ticket.priority].push(ticket);\r\n      return acc;\r\n    }, {});\r\n\r\n    return {\r\n      Keys: Object.keys(priorityObject),\r\n      ...priorityObject,\r\n    };\r\n  };\r\n\r\n  // Grouping the data by users\r\n  const groupByUser = (tickets) => {\r\n    let sortedTickets = tickets;\r\n\r\n    if (ordering === \"title\") {\r\n      sortedTickets = sortByTitle(tickets);\r\n    }\r\n\r\n    const grouped = sortedTickets.reduce((acc, ticket) => {\r\n      if (!acc[ticket.userId]) {\r\n        acc[ticket.userId] = [];\r\n      }\r\n      acc[ticket.userId].push(ticket);\r\n      return acc;\r\n    }, {});\r\n\r\n    if (ordering === \"priority\") {\r\n      for (let key in grouped) {\r\n        grouped[key].sort((a, b) => b.priority - a.priority);\r\n      }\r\n    }\r\n\r\n    return {\r\n      Keys: userData.map((user) => user.id.toString()),\r\n      ...grouped,\r\n    };\r\n  };\r\n\r\n  // Available User (online/offline) \r\n  const availabilityMap = (users) => {\r\n    return users.reduce((acc, user) => {\r\n      acc[user.id] = user.available;\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  // Work Status\r\n  const extractStatusMapping = (data) => {\r\n    const statusMapping = {};\r\n\r\n    data.tickets.forEach((ticket) => {\r\n      statusMapping[ticket.id] = ticket.status;\r\n    });\r\n\r\n    return statusMapping;\r\n  };\r\n\r\n  // Fetch API function\r\n  const getData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(FETCH_URL);\r\n      const data = await response.json();\r\n      setIsLoading(false);\r\n      setUserData(data.users);\r\n      setUser(groupByUser(data.tickets));\r\n      setStatus(groupByStatus(data.tickets));\r\n      setPriority(groupByPriority(data.tickets));\r\n      setAvailableUser(availabilityMap(data.users));\r\n      setStatusMapping(extractStatusMapping(data));\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (grouping === \"status\") {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Navbar\r\n            grouping={grouping}\r\n            setGrouping={setGrouping}\r\n            ordering={ordering}\r\n            setOrdering={setOrdering}\r\n            call={getData}\r\n          />\r\n          <div className=\"Dashboard-Container\">\r\n            {isLoading ? (\r\n              <CustomSpinner />\r\n            ) : (\r\n              <>\r\n                {status.Keys.map((item, index) => (\r\n                  <div className=\"column\" key={index}>\r\n                    <div className=\"Header\">\r\n                      <div className=\"icon-text\">\r\n                        {item == \"Todo\" ? (\r\n                          <i className=\"bx bx-circle\" id=\"todo\"></i>\r\n                        ) : item == \"In progress\" ? (\r\n                          <i className=\"bx bx-adjust\" id=\"progress\"></i>\r\n                        ) : item == \"Backlog\" ? (\r\n                          <i className=\"bx bx-task-x\" id=\"backlog\"></i>\r\n                        ) : item == \"Done\" ? (\r\n                          <i className=\"bx bxs-check-circle\" id=\"done\"></i>\r\n                        ) : (\r\n                          <i className=\"bx bxs-x-circle\" id=\"cancel\"></i>\r\n                        )}\r\n                        <span className=\"text\">\r\n                          {item == \"In progress\" ? \"In Progress\" : item}\r\n                        </span>\r\n                        <span>{status[item]?.length}</span>\r\n                      </div>\r\n                      <div className=\"actions\">\r\n                        <i className=\"bx bx-plus\" id=\"plus\"></i>\r\n                        <i\r\n                          className=\"bx bx-dots-horizontal-rounded\"\r\n                          id=\"dots\"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                    {status[item] &&\r\n                      status[item].map((value) => {\r\n                        return (\r\n                          <Card\r\n                            id={value.id}\r\n                            title={value.title}\r\n                            tag={value.tag}\r\n                            userId={value.userId}\r\n                            status={status}\r\n                            userData={userData}\r\n                            priority={value.priority}\r\n                            key={value.id}\r\n                            grouping={grouping}\r\n                            ordering={ordering}\r\n                            statusMapping={statusMapping}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else if (grouping == \"users\") {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Navbar\r\n            grouping={grouping}\r\n            setGrouping={setGrouping}\r\n            ordering={ordering}\r\n            setOrdering={setOrdering}\r\n            call={getData}\r\n          />\r\n          <div className=\"Dashboard-Container\">\r\n            {isLoading ? (\r\n              <CustomSpinner />\r\n            ) : (\r\n              <>\r\n                {availableUser &&\r\n                  user.Keys.map((userId, index) => {\r\n                    const currentUserName =\r\n                      userData.find((u) => u.id.toString() === userId)?.name ||\r\n                      \"Unknown\";\r\n                    return (\r\n                      <div className=\"column\" key={index}>\r\n                        <div className=\"Header\">\r\n                          <div className=\"icon-text\">\r\n                            <div\r\n                              className={\r\n                                String(availableUser[userId]) == \"false\"\r\n                                  ? \"user-avatar-unavailable\"\r\n                                  : \"user-avatar\"\r\n                              }\r\n                            >\r\n                              <img\r\n                                src={\r\n                                  userId == \"usr-1\"\r\n                                    ? img1\r\n                                    : userId == \"usr-2\"\r\n                                    ? img6\r\n                                    : userId == \"usr-3\"\r\n                                    ? img7\r\n                                    : userId == \"usr-4\"\r\n                                    ? img5\r\n                                    : userId == \"usr-5\"\r\n                                    ? img4\r\n                                    : img0\r\n                                }\r\n                                className={\r\n                                  String(availableUser[userId]) == \"false\"\r\n                                    ? \"user-avatar-unavailable\"\r\n                                    : \"user-avatar\"\r\n                                }\r\n                                alt=\"user\"\r\n                              ></img>\r\n                            </div>\r\n                            <span className=\"text\">{currentUserName}</span>\r\n                            <span>{user[userId]?.length}</span>\r\n                          </div>\r\n                          <div className=\"actions\">\r\n                            <i className=\"bx bx-plus\" id=\"plus\"></i>\r\n                            <i\r\n                              className=\"bx bx-dots-horizontal-rounded\"\r\n                              id=\"dots\"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                        {user[userId] &&\r\n                          user[userId].map((ticket) => {\r\n                            return (\r\n                              <Card\r\n                                id={ticket.id}\r\n                                title={ticket.title}\r\n                                tag={ticket.tag}\r\n                                userId={ticket.userId}\r\n                                userData={userData}\r\n                                priority={ticket.priority}\r\n                                key={ticket.id}\r\n                                grouping={grouping}\r\n                                ordering={ordering}\r\n                                status={status}\r\n                                statusMapping={statusMapping}\r\n                              />\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Navbar\r\n            grouping={grouping}\r\n            setGrouping={setGrouping}\r\n            ordering={ordering}\r\n            setOrdering={setOrdering}\r\n            call={getData}\r\n          />\r\n          <div className=\"Dashboard-Container\">\r\n            {isLoading ? (\r\n              <CustomSpinner />\r\n            ) : (\r\n              <>\r\n                {priority.Keys.sort((a, b) => a - b).map((item, index) => (\r\n                  <div className=\"column\" key={index}>\r\n                    <div className=\"Header\">\r\n                      <div className=\"icon-text-priority\">\r\n                        {item == \"0\" ? (\r\n                          <i\r\n                            className=\"bx bx-dots-horizontal-rounded\"\r\n                            id=\"noPriority\"\r\n                          ></i>\r\n                        ) : item == \"1\" ? (\r\n                          <i className=\"bx bx-signal-1\" id=\"low\"></i>\r\n                        ) : item == \"2\" ? (\r\n                          <i className=\"bx bx-signal-2\" id=\"medium\"></i>\r\n                        ) : item == \"3\" ? (\r\n                          <i className=\"bx bx-signal-3\" id=\"high\"></i>\r\n                        ) : (\r\n                          <i\r\n                            className=\"bx bxs-message-square-error\"\r\n                            id=\"urgent\"\r\n                          ></i>\r\n                        )}\r\n                        <span className=\"text\">\r\n                          {`Priority ${item}` == \"Priority 4\"\r\n                            ? \"Urgent\"\r\n                            : `Priority ${item}` == \"Priority 3\"\r\n                            ? \"High\"\r\n                            : `Priority ${item}` == \"Priority 2\"\r\n                            ? \"Medium\"\r\n                            : `Priority ${item}` == \"Priority 1\"\r\n                            ? \"Low\"\r\n                            : \"No Priority\"}\r\n                        </span>\r\n                        <span className=\"count\">{priority[item]?.length}</span>\r\n                      </div>\r\n                      <div className=\"actions\">\r\n                        <i className=\"bx bx-plus\" id=\"plus\"></i>\r\n                        <i\r\n                          className=\"bx bx-dots-horizontal-rounded\"\r\n                          id=\"dots\"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                    {priority[item] &&\r\n                      priority[item].map((value) => {\r\n                        return (\r\n                          <Card\r\n                            id={value.id}\r\n                            title={value.title}\r\n                            tag={value.tag}\r\n                            userId={value.userId}\r\n                            status={status}\r\n                            userData={userData}\r\n                            priority={value.priority}\r\n                            key={value.id}\r\n                            grouping={grouping}\r\n                            ordering={ordering}\r\n                            statusMapping={statusMapping}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}