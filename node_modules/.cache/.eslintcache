[{"C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\index.js":"1","C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\App.js":"2","C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Page\\Dashboard.js":"3","C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Config.js":"4","C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Components\\Navbar.js":"5","C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Components\\Card.js":"6","C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Components\\CustomSpinner.js":"7"},{"size":272,"mtime":1729600826000,"results":"8","hashOfConfig":"9"},{"size":165,"mtime":1729600826000,"results":"10","hashOfConfig":"9"},{"size":14217,"mtime":1729605425000,"results":"11","hashOfConfig":"9"},{"size":84,"mtime":1729600826000,"results":"12","hashOfConfig":"9"},{"size":2892,"mtime":1729600826000,"results":"13","hashOfConfig":"9"},{"size":3196,"mtime":1729605191000,"results":"14","hashOfConfig":"9"},{"size":206,"mtime":1729600826000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ut1dii",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\index.js",[],[],"C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\App.js",[],[],"C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Page\\Dashboard.js",["40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../Components/Card\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport CustomSpinner from \"../Components/CustomSpinner\";\r\n\r\n// Import Images\r\n\r\nimport img0 from \"../Assets/img0.png\";\r\nimport img1 from \"../Assets/img1.png\";\r\nimport img4 from \"../Assets/img4.jpeg\";\r\nimport img5 from \"../Assets/img5.jpeg\";\r\nimport img6 from \"../Assets/img6.png\";\r\nimport img7 from \"../Assets/img7.png\";\r\nimport { FETCH_URL } from \"../Config\";\r\n\r\nconst Dashboard = () => {\r\n  // State Variables\r\n  const [userData, setUserData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [status, setStatus] = useState({});\r\n  const [user, setUser] = useState({});\r\n  const [priority, setPriority] = useState({});\r\n  const [grouping, setGrouping] = useState('status');\r\n  const [ordering, setOrdering] = useState('priority');\r\n  const [availableUser, setAvailableUser] = useState({});\r\n  const [statusMapping, setStatusMapping] = useState({});\r\n  const statusKeys = [\"Backlog\", \"Todo\", \"In progress\", \"Done\", \"Canceled\"];\r\n  \r\n\r\n  // Fetch Data \r\n  useEffect(() => {\r\n    getData();\r\n  }, [grouping, ordering]);\r\n\r\n  const sortByTitle = (tickets) => {\r\n    return tickets.sort((a, b) => a.title.localeCompare(b.title));\r\n  };\r\n\r\n  // Grouping the data by Status\r\n  const groupByStatus = (tickets) => {\r\n    let sortedTickets = tickets;\r\n\r\n    if (ordering === \"title\") {\r\n      sortedTickets = sortByTitle(tickets);\r\n    }\r\n\r\n    const grouped = sortedTickets.reduce((acc, ticket) => {\r\n      if (!acc[ticket.status]) {\r\n        acc[ticket.status] = [];\r\n      }\r\n      acc[ticket.status].push(ticket);\r\n      return acc;\r\n    }, {});\r\n\r\n    statusKeys.forEach((key) => {\r\n      if (!grouped[key]) {\r\n        grouped[key] = [];\r\n      }\r\n    });\r\n\r\n    if (ordering === \"priority\") {\r\n      for (let key in grouped) {\r\n        grouped[key].sort((a, b) => b.priority - a.priority);\r\n      }\r\n    }\r\n\r\n    return {\r\n      Keys: statusKeys,\r\n      ...grouped,\r\n    };\r\n  };\r\n\r\n  // Grouping the data by Priority\r\n  const groupByPriority = (tickets) => {\r\n    let sortedTickets = tickets;\r\n\r\n    if (ordering === \"title\") {\r\n      sortedTickets = sortByTitle(tickets);\r\n    }\r\n\r\n    const priorityObject = sortedTickets.reduce((acc, ticket) => {\r\n      if (!acc[ticket.priority]) {\r\n        acc[ticket.priority] = [];\r\n      }\r\n      acc[ticket.priority].push(ticket);\r\n      return acc;\r\n    }, {});\r\n\r\n    return {\r\n      Keys: Object.keys(priorityObject),\r\n      ...priorityObject,\r\n    };\r\n  };\r\n\r\n  // Grouping the data by users\r\n  const groupByUser = (tickets) => {\r\n    let sortedTickets = tickets;\r\n\r\n    if (ordering === \"title\") {\r\n      sortedTickets = sortByTitle(tickets);\r\n    }\r\n\r\n    const grouped = sortedTickets.reduce((acc, ticket) => {\r\n      if (!acc[ticket.userId]) {\r\n        acc[ticket.userId] = [];\r\n      }\r\n      acc[ticket.userId].push(ticket);\r\n      return acc;\r\n    }, {});\r\n\r\n    if (ordering === \"priority\") {\r\n      for (let key in grouped) {\r\n        grouped[key].sort((a, b) => b.priority - a.priority);\r\n      }\r\n    }\r\n\r\n    return {\r\n      Keys: userData.map((user) => user.id.toString()),\r\n      ...grouped,\r\n    };\r\n  };\r\n\r\n  // Available User (online/offline) \r\n  const availabilityMap = (users) => {\r\n    return users.reduce((acc, user) => {\r\n      acc[user.id] = user.available;\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  // Work Status\r\n  const extractStatusMapping = (data) => {\r\n    const statusMapping = {};\r\n\r\n    data.tickets.forEach((ticket) => {\r\n      statusMapping[ticket.id] = ticket.status;\r\n    });\r\n\r\n    return statusMapping;\r\n  };\r\n\r\n  // Fetch API function\r\n  const getData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(FETCH_URL);\r\n      const data = await response.json();\r\n      setIsLoading(false);\r\n      setUserData(data.users);\r\n      setUser(groupByUser(data.tickets));\r\n      setStatus(groupByStatus(data.tickets));\r\n      setPriority(groupByPriority(data.tickets));\r\n      setAvailableUser(availabilityMap(data.users));\r\n      setStatusMapping(extractStatusMapping(data));\r\n    } catch (e) {\r\n      console.log(e);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (grouping === \"status\") {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Navbar\r\n            grouping={grouping}\r\n            setGrouping={setGrouping}\r\n            ordering={ordering}\r\n            setOrdering={setOrdering}\r\n            call={getData}\r\n          />\r\n          <div className=\"Dashboard-Container\">\r\n            {isLoading ? (\r\n              <CustomSpinner />\r\n            ) : (\r\n              <>\r\n                {status.Keys.map((item, index) => (\r\n                  <div className=\"column\" key={index}>\r\n                    <div className=\"Header\">\r\n                      <div className=\"icon-text\">\r\n                        {item == \"Todo\" ? (\r\n                          <i className=\"bx bx-circle\" id=\"todo\"></i>\r\n                        ) : item == \"In progress\" ? (\r\n                          <i className=\"bx bx-adjust\" id=\"progress\"></i>\r\n                        ) : item == \"Backlog\" ? (\r\n                          <i className=\"bx bx-task-x\" id=\"backlog\"></i>\r\n                        ) : item == \"Done\" ? (\r\n                          <i className=\"bx bxs-check-circle\" id=\"done\"></i>\r\n                        ) : (\r\n                          <i className=\"bx bxs-x-circle\" id=\"cancel\"></i>\r\n                        )}\r\n                        <span className=\"text\">\r\n                          {item == \"In progress\" ? \"In Progress\" : item}\r\n                        </span>\r\n                        <span>{status[item]?.length}</span>\r\n                      </div>\r\n                      <div className=\"actions\">\r\n                        <i className=\"bx bx-plus\" id=\"plus\"></i>\r\n                        <i\r\n                          className=\"bx bx-dots-horizontal-rounded\"\r\n                          id=\"dots\"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                    {status[item] &&\r\n                      status[item].map((value) => {\r\n                        return (\r\n                          <Card\r\n                            id={value.id}\r\n                            title={value.title}\r\n                            tag={value.tag}\r\n                            userId={value.userId}\r\n                            status={status}\r\n                            userData={userData}\r\n                            priority={value.priority}\r\n                            key={value.id}\r\n                            grouping={grouping}\r\n                            ordering={ordering}\r\n                            statusMapping={statusMapping}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else if (grouping == \"users\") {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Navbar\r\n            grouping={grouping}\r\n            setGrouping={setGrouping}\r\n            ordering={ordering}\r\n            setOrdering={setOrdering}\r\n            call={getData}\r\n          />\r\n          <div className=\"Dashboard-Container\">\r\n            {isLoading ? (\r\n              <CustomSpinner />\r\n            ) : (\r\n              <>\r\n                {availableUser &&\r\n                  user.Keys.map((userId, index) => {\r\n                    const currentUserName =\r\n                      userData.find((u) => u.id.toString() === userId)?.name ||\r\n                      \"Unknown\";\r\n                    return (\r\n                      <div className=\"column\" key={index}>\r\n                        <div className=\"Header\">\r\n                          <div className=\"icon-text\">\r\n                            <div\r\n                              className={\r\n                                String(availableUser[userId]) == \"false\"\r\n                                  ? \"user-avatar-unavailable\"\r\n                                  : \"user-avatar\"\r\n                              }\r\n                            >\r\n                              <img\r\n                                src={\r\n                                  userId == \"usr-1\"\r\n                                    ? img1\r\n                                    : userId == \"usr-2\"\r\n                                    ? img6\r\n                                    : userId == \"usr-3\"\r\n                                    ? img7\r\n                                    : userId == \"usr-4\"\r\n                                    ? img5\r\n                                    : userId == \"usr-5\"\r\n                                    ? img4\r\n                                    : img0\r\n                                }\r\n                                className={\r\n                                  String(availableUser[userId]) == \"false\"\r\n                                    ? \"user-avatar-unavailable\"\r\n                                    : \"user-avatar\"\r\n                                }\r\n                                alt=\"user\"\r\n                              ></img>\r\n                            </div>\r\n                            <span className=\"text\">{currentUserName}</span>\r\n                            <span>{user[userId]?.length}</span>\r\n                          </div>\r\n                          <div className=\"actions\">\r\n                            <i className=\"bx bx-plus\" id=\"plus\"></i>\r\n                            <i\r\n                              className=\"bx bx-dots-horizontal-rounded\"\r\n                              id=\"dots\"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                        {user[userId] &&\r\n                          user[userId].map((ticket) => {\r\n                            return (\r\n                              <Card\r\n                                id={ticket.id}\r\n                                title={ticket.title}\r\n                                tag={ticket.tag}\r\n                                userId={ticket.userId}\r\n                                userData={userData}\r\n                                priority={ticket.priority}\r\n                                key={ticket.id}\r\n                                grouping={grouping}\r\n                                ordering={ordering}\r\n                                status={status}\r\n                                statusMapping={statusMapping}\r\n                              />\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Navbar\r\n            grouping={grouping}\r\n            setGrouping={setGrouping}\r\n            ordering={ordering}\r\n            setOrdering={setOrdering}\r\n            call={getData}\r\n          />\r\n          <div className=\"Dashboard-Container\">\r\n            {isLoading ? (\r\n              <CustomSpinner />\r\n            ) : (\r\n              <>\r\n                {priority.Keys.sort((a, b) => a - b).map((item, index) => (\r\n                  <div className=\"column\" key={index}>\r\n                    <div className=\"Header\">\r\n                      <div className=\"icon-text-priority\">\r\n                        {item == \"0\" ? (\r\n                          <i\r\n                            className=\"bx bx-dots-horizontal-rounded\"\r\n                            id=\"noPriority\"\r\n                          ></i>\r\n                        ) : item == \"1\" ? (\r\n                          <i className=\"bx bx-signal-1\" id=\"low\"></i>\r\n                        ) : item == \"2\" ? (\r\n                          <i className=\"bx bx-signal-2\" id=\"medium\"></i>\r\n                        ) : item == \"3\" ? (\r\n                          <i className=\"bx bx-signal-3\" id=\"high\"></i>\r\n                        ) : (\r\n                          <i\r\n                            className=\"bx bxs-message-square-error\"\r\n                            id=\"urgent\"\r\n                          ></i>\r\n                        )}\r\n                        <span className=\"text\">\r\n                          {`Priority ${item}` == \"Priority 4\"\r\n                            ? \"Urgent\"\r\n                            : `Priority ${item}` == \"Priority 3\"\r\n                            ? \"High\"\r\n                            : `Priority ${item}` == \"Priority 2\"\r\n                            ? \"Medium\"\r\n                            : `Priority ${item}` == \"Priority 1\"\r\n                            ? \"Low\"\r\n                            : \"No Priority\"}\r\n                        </span>\r\n                        <span className=\"count\">{priority[item]?.length}</span>\r\n                      </div>\r\n                      <div className=\"actions\">\r\n                        <i className=\"bx bx-plus\" id=\"plus\"></i>\r\n                        <i\r\n                          className=\"bx bx-dots-horizontal-rounded\"\r\n                          id=\"dots\"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                    {priority[item] &&\r\n                      priority[item].map((value) => {\r\n                        return (\r\n                          <Card\r\n                            id={value.id}\r\n                            title={value.title}\r\n                            tag={value.tag}\r\n                            userId={value.userId}\r\n                            status={status}\r\n                            userData={userData}\r\n                            priority={value.priority}\r\n                            key={value.id}\r\n                            grouping={grouping}\r\n                            ordering={ordering}\r\n                            statusMapping={statusMapping}\r\n                          />\r\n                        );\r\n                      })}\r\n                  </div>\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Config.js",[],[],"C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Components\\Navbar.js",["62","63","64","65"],[],"import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst Navbar = ({ grouping: propGrouping, setGrouping, ordering: propOrdering, setOrdering, call }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const initialGrouping = localStorage.getItem(\"grouping\") || propGrouping;\r\n  const initialOrdering = localStorage.getItem(\"ordering\") || propOrdering;\r\n\r\n  const [grouping, setLocalGrouping] = useState(initialGrouping);\r\n  const [ordering, setLocalOrdering] = useState(initialOrdering);\r\n\r\n//   useEffect(() => {\r\n//     if (propGrouping !== grouping) {\r\n//       setLocalGrouping(propGrouping);\r\n//     }\r\n//   }, [propGrouping, grouping]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"grouping\", grouping);\r\n    setGrouping(grouping);\r\n  }, [grouping]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"ordering\", ordering);\r\n    setOrdering(ordering);\r\n  }, [ordering]);\r\n\r\n  // Handlers\r\n  const handleGrouping = (event) => {\r\n    const newValue = event.target.value;\r\n    localStorage.setItem(\"grouping\", newValue);\r\n    setGrouping(newValue);\r\n    if (newValue === \"users\") {\r\n      call();\r\n    }\r\n  };\r\n\r\n  const handleOrdering = (event) => {\r\n    const newValue = event.target.value;\r\n    localStorage.setItem(\"ordering\", newValue);\r\n    setOrdering(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <div className=\"dropdown-container\" ref={dropdownRef}>\r\n        <button onClick={() => setIsOpen(!isOpen)} className=\"dropdown-btn\">\r\n          <i className=\"bx bx-slider\"></i>\r\n          <div className=\"btn-txt\">Display</div>\r\n          <i className=\"bx bx-chevron-down\"></i>\r\n        </button>\r\n        {isOpen && (\r\n          <div className=\"dropdown-content\">\r\n            <div className=\"Grouping\">\r\n              <label>Grouping</label>\r\n              <select value={propGrouping} onChange={handleGrouping}>\r\n                <option value=\"status\">Status</option>\r\n                <option value=\"users\">User</option>\r\n                <option value=\"priority\">Priority</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"Ordering\">\r\n              <label>Ordering</label>\r\n              <select value={propOrdering} onChange={handleOrdering}>\r\n                <option value=\"priority\">Priority</option>\r\n                <option value=\"title\">Title</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Components\\Card.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],[],"import React, { useEffect } from \"react\";\r\nimport img0 from \"../Assets/img0.png\";\r\nimport img1 from \"../Assets/img1.png\";\r\nimport img4 from \"../Assets/img4.jpeg\";\r\nimport img5 from \"../Assets/img5.jpeg\";\r\nimport img6 from \"../Assets/img6.png\";\r\nimport img7 from \"../Assets/img7.png\";\r\n\r\nconst Card = ({\r\n  id,\r\n  title,\r\n  tag,\r\n  userId,\r\n  userData,\r\n  status,\r\n  priority,\r\n  grouping,\r\n  ordering,\r\n  statusMapping,\r\n}) => {\r\n  const user = userData.find((user) => user.id === userId);\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <div className=\"status-heading\">\r\n          {grouping == \"users\" || grouping == \"priority\" ? (\r\n            statusMapping[id] == \"Todo\" ? (\r\n              <i className=\"bx bx-circle\" id=\"todo\"></i>\r\n            ) : statusMapping[id] == \"In progress\" ? (\r\n              <i className=\"bx bx-adjust\" id=\"progress\"></i>\r\n            ) : statusMapping[id] == \"Backlog\" ? (\r\n              <i className=\"bx bx-task-x\" id=\"backlog\"></i>\r\n            ) : statusMapping[id] == \"Done\" ? (\r\n              <i className=\"bx bxs-check-circle\" id=\"done\"></i>\r\n            ) : (\r\n              <i className=\"bx bxs-x-circle\" id=\"cancel\"></i>\r\n            )\r\n          ) : null}\r\n          <p>{id}</p>\r\n        </div>\r\n        {grouping != \"users\" ? (\r\n          <div\r\n            className={\r\n              user && !user.available\r\n                ? \"user-avatar-unavailable\"\r\n                : \"user-avatar\"\r\n            }\r\n          >\r\n            <img\r\n              src={\r\n                userId == \"usr-1\"\r\n                  ? img1\r\n                  : userId == \"usr-2\"\r\n                  ? img6\r\n                  : userId == \"usr-3\"\r\n                  ? img7\r\n                  : userId == \"usr-4\"\r\n                  ? img5\r\n                  : userId == \"usr-5\"\r\n                  ? img4\r\n                  : img0\r\n              }\r\n              className={\r\n                user && !user.available\r\n                  ? \"user-avatar-unavailable\"\r\n                  : \"user-avatar\"\r\n              }\r\n              alt=\"user\"\r\n            ></img>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"card-title\">\r\n        <p>{title}</p>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        {grouping != \"priority\" ? (\r\n          <div className=\"feature-container\">\r\n            {priority == \"0\" ? (\r\n              <i className=\"bx bx-dots-horizontal-rounded\"></i>\r\n            ) : priority == \"1\" ? (\r\n              <i className=\"bx bx-signal-1\"></i>\r\n            ) : priority == \"2\" ? (\r\n              <i className=\"bx bx-signal-2\"></i>\r\n            ) : priority == \"3\" ? (\r\n              <i className=\"bx bx-signal-3\"></i>\r\n            ) : (\r\n              <i className=\"bx bxs-message-square-error\"></i>\r\n            )}\r\n          </div>\r\n        ) : null}\r\n        {tag?.map((value, index) => {\r\n          return (\r\n            <div className=\"feature-container\" key={index}>\r\n              <div className=\"alert-icon\"></div>\r\n              <div className=\"feature-request\">{value}</div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\dhaka\\Downloads\\QuickSell-Frontend-Assignment\\Frontend_Assignment_Campus\\src\\Components\\CustomSpinner.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":33,"column":6,"nodeType":"86","endLine":33,"endColumn":26,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":181,"column":31,"nodeType":"90","messageId":"91","endLine":181,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":183,"column":34,"nodeType":"90","messageId":"91","endLine":183,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":185,"column":34,"nodeType":"90","messageId":"91","endLine":185,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":187,"column":34,"nodeType":"90","messageId":"91","endLine":187,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":193,"column":33,"nodeType":"90","messageId":"91","endLine":193,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":231,"column":23,"nodeType":"90","messageId":"91","endLine":231,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":258,"column":63,"nodeType":"90","messageId":"91","endLine":258,"endColumn":65},{"ruleId":"88","severity":1,"message":"89","line":265,"column":42,"nodeType":"90","messageId":"91","endLine":265,"endColumn":44},{"ruleId":"88","severity":1,"message":"89","line":267,"column":46,"nodeType":"90","messageId":"91","endLine":267,"endColumn":48},{"ruleId":"88","severity":1,"message":"89","line":269,"column":46,"nodeType":"90","messageId":"91","endLine":269,"endColumn":48},{"ruleId":"88","severity":1,"message":"89","line":271,"column":46,"nodeType":"90","messageId":"91","endLine":271,"endColumn":48},{"ruleId":"88","severity":1,"message":"89","line":273,"column":46,"nodeType":"90","messageId":"91","endLine":273,"endColumn":48},{"ruleId":"88","severity":1,"message":"89","line":278,"column":65,"nodeType":"90","messageId":"91","endLine":278,"endColumn":67},{"ruleId":"88","severity":1,"message":"89","line":343,"column":31,"nodeType":"90","messageId":"91","endLine":343,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":348,"column":34,"nodeType":"90","messageId":"91","endLine":348,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":350,"column":34,"nodeType":"90","messageId":"91","endLine":350,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":352,"column":34,"nodeType":"90","messageId":"91","endLine":352,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":361,"column":47,"nodeType":"90","messageId":"91","endLine":361,"endColumn":49},{"ruleId":"88","severity":1,"message":"89","line":363,"column":50,"nodeType":"90","messageId":"91","endLine":363,"endColumn":52},{"ruleId":"88","severity":1,"message":"89","line":365,"column":50,"nodeType":"90","messageId":"91","endLine":365,"endColumn":52},{"ruleId":"88","severity":1,"message":"89","line":367,"column":50,"nodeType":"90","messageId":"91","endLine":367,"endColumn":52},{"ruleId":"92","severity":1,"message":"93","line":10,"column":20,"nodeType":"94","messageId":"95","endLine":10,"endColumn":36},{"ruleId":"92","severity":1,"message":"96","line":11,"column":20,"nodeType":"94","messageId":"95","endLine":11,"endColumn":36},{"ruleId":"84","severity":1,"message":"97","line":22,"column":6,"nodeType":"86","endLine":22,"endColumn":16,"suggestions":"98"},{"ruleId":"84","severity":1,"message":"99","line":27,"column":6,"nodeType":"86","endLine":27,"endColumn":16,"suggestions":"100"},{"ruleId":"92","severity":1,"message":"101","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":27,"column":21,"nodeType":"90","messageId":"91","endLine":27,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":27,"column":44,"nodeType":"90","messageId":"91","endLine":27,"endColumn":46},{"ruleId":"88","severity":1,"message":"89","line":28,"column":31,"nodeType":"90","messageId":"91","endLine":28,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":30,"column":35,"nodeType":"90","messageId":"91","endLine":30,"endColumn":37},{"ruleId":"88","severity":1,"message":"89","line":32,"column":35,"nodeType":"90","messageId":"91","endLine":32,"endColumn":37},{"ruleId":"88","severity":1,"message":"89","line":34,"column":35,"nodeType":"90","messageId":"91","endLine":34,"endColumn":37},{"ruleId":"88","severity":1,"message":"102","line":42,"column":19,"nodeType":"90","messageId":"91","endLine":42,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":52,"column":24,"nodeType":"90","messageId":"91","endLine":52,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":54,"column":28,"nodeType":"90","messageId":"91","endLine":54,"endColumn":30},{"ruleId":"88","severity":1,"message":"89","line":56,"column":28,"nodeType":"90","messageId":"91","endLine":56,"endColumn":30},{"ruleId":"88","severity":1,"message":"89","line":58,"column":28,"nodeType":"90","messageId":"91","endLine":58,"endColumn":30},{"ruleId":"88","severity":1,"message":"89","line":60,"column":28,"nodeType":"90","messageId":"91","endLine":60,"endColumn":30},{"ruleId":"88","severity":1,"message":"102","line":78,"column":19,"nodeType":"90","messageId":"91","endLine":78,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":80,"column":23,"nodeType":"90","messageId":"91","endLine":80,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":82,"column":26,"nodeType":"90","messageId":"91","endLine":82,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":84,"column":26,"nodeType":"90","messageId":"91","endLine":84,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":86,"column":26,"nodeType":"90","messageId":"91","endLine":86,"endColumn":28},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["103"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setLocalGrouping' is assigned a value but never used.","Identifier","unusedVar","'setLocalOrdering' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setGrouping'. Either include it or remove the dependency array. If 'setGrouping' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["104"],"React Hook useEffect has a missing dependency: 'setOrdering'. Either include it or remove the dependency array. If 'setOrdering' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["105"],"'useEffect' is defined but never used.","Expected '!==' and instead saw '!='.",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [getData, grouping, ordering]",{"range":"112","text":"113"},"Update the dependencies array to be: [grouping, setGrouping]",{"range":"114","text":"115"},"Update the dependencies array to be: [ordering, setOrdering]",{"range":"116","text":"117"},[1161,1181],"[getData, grouping, ordering]",[806,816],"[grouping, setGrouping]",[925,935],"[ordering, setOrdering]"]